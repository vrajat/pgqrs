
name: CI
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: actions-rust-lang/rustfmt@v1

      - name: Cache cargo artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libpq-dev

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose --no-fail-fast

  release:
    name: Publish crate (Trusted Publishing)
    runs-on: ubuntu-latest

    # optional: ensure only one publish per tag
    concurrency:
      group: publish-${{ github.ref }}
      cancel-in-progress: false

    if: startsWith(github.ref, 'refs/tags/v')

    # Required for OIDC â†’ crates.io token exchange
    permissions:
      id-token: write
      contents: read

    # Optional: require manual approval via GitHub Environments
    # (If you set this, use the same environment name when creating the Trusted Publisher on crates.io)
    # environment: release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you already pin toolchain via rust-toolchain file, you can omit this
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Optional sanity checks before publishing
      - name: Build & test
        run: |
          cargo build --release --locked
          cargo test --release --locked

      # Get short-lived crates.io token via OIDC
      - name: Authenticate with crates.io (Trusted Publishing)
        id: auth
        uses: rust-lang/crates-io-auth-action@v1

      # Package, verify, then publish using the short-lived token
      - name: Publish to crates.io
        run: |
          cargo package --list
          cargo publish --dry-run --locked
          cargo publish --locked